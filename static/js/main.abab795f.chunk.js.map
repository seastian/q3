{"version":3,"sources":["Components/Logo/Audi.svg","Components/Logo/MercedesBenz.svg","cockpit.jpg","serviceWorker.js","Components/Ranking.js","Components/Logo/index.js","Components/RankingItem.js","Components/RankingList.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","useStyles","makeStyles","root","position","height","textLayout","top","text","fontSize","color","paddingRight","Ranking","ranking","accent","classes","className","width","viewBox","preserveAspectRatio","transform","id","d","style","fill","y","x","Grid","container","alignItems","justify","Typography","Logos","Audi","MercedesBenz","useStyle","img","display","Logo","brand","src","backgroundColor","logo","padding","RankingItem","name","time","gap","out","item","xs","variant","theme","RankingList","backgroundImage","cockpit","backgroundSize","backgroundRepeat","backgroundPosition","App","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.abab795f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Audi.89a3ae07.svg\";","module.exports = __webpack_public_path__ + \"static/media/MercedesBenz.21419bb0.svg\";","module.exports = __webpack_public_path__ + \"static/media/cockpit.097a3063.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: \"relative\",\r\n        height: \"100%\"\r\n    },\r\n    textLayout: {\r\n        top: 0,\r\n        height: \"100%\",\r\n        position: \"absolute\"\r\n    },\r\n    text: {\r\n        fontSize: \"2em\",\r\n        color: \"white\",\r\n        paddingRight: \"1.5em\"\r\n    }\r\n});\r\n\r\nfunction Ranking({ ranking, color = \"#565459\", accent = \"#92870f\" }) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <svg height=\"100%\" width=\"100%\" viewBox=\"0 0 133.17249 62\" preserveAspectRatio=\"none\">\r\n                <g\r\n                    transform=\"translate(53.052959,0.77060652)\"\r\n                    id=\"layer1\">\r\n                    <path\r\n                        id=\"path4500\"\r\n                        transform=\"matrix(0.26458333,0,0,0.26458333,7.0103529,-0.61009725)\"\r\n                        d=\"M -224.86914,1.5351562 V 231.85156 H 3.0976562 L 178.26562,1.5351562 Z\"\r\n                        style={{ fill: color }} />\r\n                    <rect\r\n                        transform=\"matrix(1,0,-0.6053656,0.79594754,0,0)\"\r\n                        y=\"-0.25594509\"\r\n                        x=\"54.021614\"\r\n                        height=\"76.559631\"\r\n                        width=\"25.123335\"\r\n                        id=\"rect4485\"\r\n                        style={{ fill: accent }} />\r\n                </g>\r\n            </svg>\r\n            <Grid container className={classes.textLayout} alignItems=\"center\" justify=\"center\">\r\n                <Typography className={classes.text}>\r\n                    {ranking}\r\n                </Typography>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Ranking;","import React from \"react\";\r\nimport Audi from \"./Audi.svg\";\r\nimport MercedesBenz from \"./MercedesBenz.svg\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst Logos = {\r\n    Audi,\r\n    MercedesBenz\r\n}\r\n\r\nconst useStyle = makeStyles({\r\n    img: {\r\n        height: \"10px\",\r\n        display: \"block\"\r\n    }\r\n});\r\n\r\nfunction Logo({ brand = \"Audi\" }) {\r\n    const classes = useStyle();\r\n    return (\r\n        <img src={Logos[brand]} className={classes.img}/>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Ranking from \"Components/Ranking\";\r\nimport Logo from \"Components/Logo\";\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: \"grey\",\r\n        height: \"3em\"\r\n    },\r\n    fill: {\r\n        height: \"100%\"\r\n    },\r\n    logo: {\r\n        padding: \"1em\",\r\n        height: \"100%\"\r\n    }\r\n});\r\n\r\n\r\nfunction RankingItem({ ranking, color, accent, name, brand, time, gap, out }) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Grid container className={classes.root} alignItems=\"center\">\r\n                <Grid item xs={2} className={classes.fill}>\r\n                    <Ranking ranking={ranking} color={color} accent={accent} />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Typography variant=\"overline\" display=\"block\">\r\n                        {name}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={2} container alignItems=\"center\" justify=\"center\" className={classes.logo} >\r\n                    <Logo brand={brand}/>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Typography variant=\"button\" display=\"block\">\r\n                        {time}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    {gap}\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                    OUT\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RankingItem;","import React from \"react\";\r\nimport RankingItem from \"Components/RankingItem\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: \"30%\",\r\n      \"& > *\": {\r\n        padding: \"0.4em\"\r\n      }\r\n    },\r\n  }));\r\n\r\nfunction RankingList() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <RankingItem ranking={1} name={\"ber\"} time={\"12:45.0234\"}/>\r\n            <RankingItem ranking={2} name={\"fre\"} time={\"12:45.0234\"} accent={\"red\"} gap={3.454}/>\r\n            <RankingItem ranking={3} name={\"oll\"} time={\"12:45.0234\"} brand=\"MercedesBenz\"/>\r\n            <RankingItem ranking={4} name={\"ber\"} time={\"12:45.0234\"} color={\"#3e9200\"} accent={\"#a53518\"}/>\r\n            <RankingItem ranking={5} name={\"prr\"} time={\"12:45.0234\"} brand=\"MercedesBenz\"/>\r\n            <RankingItem ranking={6} name={\"prr\"} time={\"12:45.0234\"} brand=\"MercedesBenz\"/>\r\n            <RankingItem ranking={7} name={\"prr\"} time={\"12:45.0234\"} brand=\"MercedesBenz\"/>\r\n            <RankingItem ranking={8} name={\"prr\"} time={\"12:45.0234\"} brand=\"MercedesBenz\"/>\r\n            <RankingItem ranking={9} name={\"prr\"} time={\"12:45.0234\"} brand=\"MercedesBenz\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RankingList;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RankingList from \"Components/RankingList\";\nimport cockpit from \"./cockpit.jpg\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100vw\",\n    height: \"100vh\",\n    position: \"relative\",\n    backgroundImage: `url(${cockpit})`,\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"50% 50%\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <RankingList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}